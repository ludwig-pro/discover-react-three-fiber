{"ast":null,"code":"import _slicedToArray from \"/Users/ludwig/source/pong-react-three-js/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ludwig/source/pong-react-three-js/src/App.js\";\nimport ReactDOM from 'react-dom';\nimport React, { useRef, useState } from 'react';\nimport { Canvas, useFrame, useThree } from 'react-three-fiber';\nimport { Physics, useSphere, useBox, usePlane } from 'use-cannon';\nimport './styles.css';\nexport const Ball = ({\n  args = [0.5, 32, 32]\n}) => {\n  // args [radius : Float, widthSegments : Integer, heightSegments : Integer]\n  const _useSphere = useSphere(() => ({\n    args: 0.5,\n    mass: 1\n  })),\n        _useSphere2 = _slicedToArray(_useSphere, 1),\n        ref = _useSphere2[0]; // size & mass\n\n\n  return /*#__PURE__*/React.createElement(\"mesh\", Object.assign({\n    ref\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"sphereBufferGeometry\", Object.assign({\n    args\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }));\n};\nexport const Paddel = ({\n  args = [2, 0.5, 1]\n}) => {\n  // args [radius : Float, widthSegments : Integer, heightSegments : Integer]\n  const _useBox = useBox(() => ({\n    args\n  })),\n        _useBox2 = _slicedToArray(_useBox, 2),\n        ref = _useBox2[0],\n        api = _useBox2[1];\n\n  useFrame(state => {\n    api.position.set(state.mouse.x * (state.viewport.width / 2), -state.viewport.height / 3, 0);\n  }); // need to use it if we depend of physic => frame at 60 fps, it's loop\n\n  usePlane(() => ({\n    rotation: Math.PI / 2\n  }));\n  return /*#__PURE__*/React.createElement(\"mesh\", Object.assign({\n    ref\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"boxBufferGeometry\", Object.assign({\n    args\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    color: \"lightblue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n};\nexport default function App() {\n  return /*#__PURE__*/React.createElement(Canvas, {\n    camera: {\n      position: [0, 5, 12],\n      fov: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ambientLight\", {\n    intensity: 0.3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    position: [10, 10, 5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    position: [-10, -10, -5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Physics, {\n    gravity: [0, -30, 0],\n    defaultContactMaterial: {\n      restitution: 1.1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Ball, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Paddel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/ludwig/source/pong-react-three-js/src/App.js"],"names":["ReactDOM","React","useRef","useState","Canvas","useFrame","useThree","Physics","useSphere","useBox","usePlane","Ball","args","mass","ref","Paddel","api","state","position","set","mouse","x","viewport","width","height","rotation","Math","PI","App","fov","restitution"],"mappings":"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","sourcesContent":["import ReactDOM from 'react-dom'\nimport React, { useRef, useState } from 'react'\nimport { Canvas, useFrame, useThree } from 'react-three-fiber'\nimport { Physics, useSphere, useBox, usePlane } from 'use-cannon'\nimport './styles.css'\n\nexport const Ball = ({ args = [0.5, 32, 32] }) => {\n  // args [radius : Float, widthSegments : Integer, heightSegments : Integer]\n\n  const [ref] = useSphere(() => ({ args: 0.5, mass: 1 })) // size & mass\n\n  return (\n    <mesh {...{ ref }}>\n      <sphereBufferGeometry {...{ args }} />\n      <meshStandardMaterial color=\"white\" />\n    </mesh>\n  )\n}\n\nexport const Paddel = ({ args = [2, 0.5, 1] }) => {\n  // args [radius : Float, widthSegments : Integer, heightSegments : Integer]\n  const [ref, api] = useBox(() => ({ args }))\n\n  useFrame((state) => {\n    api.position.set(state.mouse.x * (state.viewport.width / 2), -state.viewport.height / 3, 0)\n  }) // need to use it if we depend of physic => frame at 60 fps, it's loop\n\n  usePlane(() => ({ rotation: Math.PI / 2 }))\n\n  return (\n    <mesh {...{ ref }}>\n      <boxBufferGeometry {...{ args }} />\n      <meshStandardMaterial color=\"lightblue\" />\n    </mesh>\n  )\n}\n\nexport default function App() {\n  return (\n    <Canvas camera={{ position: [0, 5, 12], fov: 50 }}>\n      <ambientLight intensity={0.3} />\n      <pointLight position={[10, 10, 5]} />\n      <pointLight position={[-10, -10, -5]} />\n      <Physics gravity={[0, -30, 0]} defaultContactMaterial={{ restitution: 1.1 }}>\n        <Ball />\n        <Paddel />\n      </Physics>\n    </Canvas>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}